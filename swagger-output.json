{
  "swagger": "2.0",
  "info": {
    "title": "Real Estate Hub API",
    "description": "API documentation for Real Estate Hub application",
    "version": "1.0.0"
  },
  "host": "real-estate-hub-cmhc.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Properties",
      "description": "Property management endpoints"
    },
    {
      "name": "Agents",
      "description": "Agent management endpoints"
    },
    {
      "name": "Clients",
      "description": "Client management endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://github.com/login/oauth/authorize",
      "tokenUrl": "https://github.com/login/oauth/access_token",
      "scopes": {
        "read:user": "Read user profiles",
        "write:user": "Modify own user profile"
      }
    }
  },
  "paths": {
    "/properties": {
      "post": {
        "tags": ["Properties"],
        "description": "Create a new property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Property information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" },
                "data": { "$ref": "#/definitions/Property" }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict - Duplicate title"
          }
        },
        "security": [
          { "OAuth2": ["write:property"] }
        ]
      },
      "get": {
        "tags": ["Properties"],
        "description": "Get all properties",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Property" }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/properties/{id}": {
      "get": {
        "tags": ["Properties"],
        "description": "Get property by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Property ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Property" }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Properties"],
        "description": "Update property by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Property ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Property information to update",
            "required": true,
            "schema": { "$ref": "#/definitions/Property" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" },
                "data": { "$ref": "#/definitions/Property" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:property"] }
        ]
      },
      "delete": {
        "tags": ["Properties"],
        "description": "Delete property by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Property ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" }
              }
            }
          },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:property"] }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "description": "Get all users (authenticated users only)",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User" }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          { "OAuth2": ["read:user"] }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "description": "Get user by ID (authenticated users only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/User" }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["read:user"] }
        ]
      },
      "put": {
        "tags": ["Users"],
        "description": "Update user by ID (only owner can update)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User information to update",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" },
                "data": { "$ref": "#/definitions/User" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:user"] }
        ]
      },
      "delete": {
        "tags": ["Users"],
        "description": "Delete user by ID (only owner can delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:user"] }
        ]
      }
    },
    "/agents": {
      "post": {
        "tags": ["Agents"],
        "description": "Create a new agent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Agent information",
            "required": true,
            "schema": { "$ref": "#/definitions/Agent" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" },
                "data": { "$ref": "#/definitions/Agent" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "409": { "description": "Conflict" }
        },
        "security": [
          { "OAuth2": ["write:agent"] }
        ]
      },
      "get": {
        "tags": ["Agents"],
        "description": "Get all agents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Agent" }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/agents/{id}": {
      "get": {
        "tags": ["Agents"],
        "description": "Get agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Agent" }
          },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "tags": ["Agents"],
        "description": "Update agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Agent ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Agent information to update",
            "required": true,
            "schema": { "$ref": "#/definitions/Agent" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" },
                "data": { "$ref": "#/definitions/Agent" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:agent"] }
        ]
      },
      "delete": {
        "tags": ["Agents"],
        "description": "Delete agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" }
              }
            }
          },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:agent"] }
        ]
      }
    },
    "/clients": {
      "post": {
        "tags": ["Clients"],
        "description": "Create a new client",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Client information",
            "required": true,
            "schema": { "$ref": "#/definitions/Client" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" },
                "data": { "$ref": "#/definitions/Client" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "409": { "description": "Conflict" }
        },
        "security": [
          { "OAuth2": ["write:client"] }
        ]
      },
      "get": {
        "tags": ["Clients"],
        "description": "Get all clients",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Client" }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": ["Clients"],
        "description": "Get client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Client ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Client" }
          },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "tags": ["Clients"],
        "description": "Update client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Client ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Client information to update",
            "required": true,
            "schema": { "$ref": "#/definitions/Client" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" },
                "data": { "$ref": "#/definitions/Client" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:client"] }
        ]
      },
      "delete": {
        "tags": ["Clients"],
        "description": "Delete client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Client ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean" },
                "message": { "type": "string" }
              }
            }
          },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [
          { "OAuth2": ["write:client"] }
        ]
      }
    }
  },
  "definitions": {
    "Property": {
      "type": "object",
      "required": ["title", "description", "type", "address", "price", "bedrooms", "bathrooms", "status"],
      "properties": {
        "title": { "type": "string", "example": "Modern Downtown Apartment" },
        "description": { "type": "string", "example": "Luxury apartment with city views" },
        "type": { "type": "string", "enum": ["rent", "sale"], "example": "rent" },
        "address": { "type": "string", "example": "123 Main St, City, State" },
        "price": { "type": "number", "example": 2500 },
        "bedrooms": { "type": "number", "example": 2 },
        "bathrooms": { "type": "number", "example": 2 },
        "status": { "type": "string", "enum": ["available", "sold", "rented"], "example": "available" }
      }
    },
    "Agent": {
      "type": "object",
      "required": ["name", "email", "phone", "licenseNumber"],
      "properties": {
        "name": { "type": "string", "example": "Aisha Brown" },
        "email": { "type": "string", "format": "email", "example": "abrown@engineering.ae" },
        "phone": { "type": "string", "example": "555-876-5432" },
        "licenseNumber": { "type": "string", "example": "ENG11223344556" }
      }
    },
    "Client": {
      "type": "object",
      "required": ["name", "email", "phone"],
      "properties": {
        "name": { "type": "string", "example": "Jane Doe" },
        "email": { "type": "string", "format": "email", "example": "jane@example.com" },
        "phone": { "type": "string", "example": "555-987-6543" }
      }
    },
    "User": {
      "type": "object",
      "required": ["githubId", "username", "email", "profilePicture"],
      "properties": {
        "githubId": { "type": "string", "example": "12345" },
        "username": { "type": "string", "example": "johndoe" },
        "email": { "type": "string", "format": "email", "example": "john@example.com" },
        "profilePicture": { "type": "string", "example": "https://example.com/pic.jpg" }
      }
    }
  }
}