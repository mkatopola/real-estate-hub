{
  "swagger": "2.0",
  "info": {
    "title": "Real Estate Hub API",
    "description": "API documentation for Real Estate Hub application",
    "version": "1.0.0"
  },
  "host": "real-estate-hub-cmhc.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication endpoints"
    },
    {
      "name": "Properties",
      "description": "Property management endpoints"
    },
    {
      "name": "Agents",
      "description": "Agent management endpoints"
    },
    {
      "name": "Clients",
      "description": "Client management endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Appointments",
      "description": "Appointment management endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://github.com/login/oauth/authorize",
      "tokenUrl": "https://github.com/login/oauth/access_token",
      "scopes": {
        "read:user": "Read user profile",
        "write:user": "Write user profile"
      }
    }
  },
  "paths": {
    "/api-docs.json": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Initiate GitHub authentication",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "GitHub authentication callback",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Log out current user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/agents/": {
      "post": {
        "tags": [
          "Agents"
        ],
        "description": "Create a new agent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Agent information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "get": {
        "tags": [
          "Agents"
        ],
        "description": "Get all agents",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/agents/{id}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "description": "Get agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Agents"
        ],
        "description": "Update an agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Agent information to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Agents"
        ],
        "description": "Delete agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/clients/": {
      "post": {
        "tags": [
          "Clients"
        ],
        "description": "Create a new client",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Client information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "get": {
        "tags": [
          "Clients"
        ],
        "description": "Get all clients",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "description": "Get client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Client ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "description": "Update a client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Client information to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "description": "Delete client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Client ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/properties/": {
      "post": {
        "tags": [
          "Properties"
        ],
        "description": "Create a new property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Property information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "get": {
        "tags": [
          "Properties"
        ],
        "description": "Get all properties",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/properties/{id}": {
      "get": {
        "tags": [
          "Properties"
        ],
        "description": "Get property by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Property ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Properties"
        ],
        "description": "Update a property by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Property information to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Properties"
        ],
        "description": "Delete property by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Property ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all users (authenticated users only)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get user by ID (authenticated users only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update user by ID (only owner can update)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User information to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete user by ID (only owner can delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/appointments/": {
      "post": {
        "tags": [
          "Appointments"
        ],
        "description": "Create a new appointment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Appointment information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Appointment created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Appointment created successfully"
                },
                "data": {
                  "$ref": "#/definitions/Appointment"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "get": {
        "tags": [
          "Appointments"
        ],
        "description": "Get all appointments",
        "responses": {
          "200": {
            "description": "List of all appointments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Appointment"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/appointments/{id}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "description": "Get appointment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment found",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Appointment not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Appointment not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "put": {
        "tags": [
          "Appointments"
        ],
        "description": "Update an appointment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Appointment information to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Appointment updated successfully"
                },
                "data": {
                  "$ref": "#/definitions/Appointment"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Appointment not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Appointment not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Appointments"
        ],
        "description": "Delete appointment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Appointment deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Appointment not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Appointment not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Property": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Modern Downtown Apartment"
        },
        "description": {
          "type": "string",
          "example": "Luxury apartment with city views"
        },
        "type": {
          "type": "string",
          "example": "rent"
        },
        "address": {
          "type": "string",
          "example": "123 Main St, City, State"
        },
        "price": {
          "type": "number",
          "example": 2500
        },
        "bedrooms": {
          "type": "number",
          "example": 2
        },
        "bathrooms": {
          "type": "number",
          "example": 2
        },
        "status": {
          "type": "string",
          "example": "available"
        }
      }
    },
    "Agent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Aisha Brown"
        },
        "email": {
          "type": "string",
          "example": "abrown@engineering.ae"
        },
        "phone": {
          "type": "string",
          "example": "555-876-5432"
        },
        "licenseNumber": {
          "type": "string",
          "example": "ENG11223344556"
        }
      }
    },
    "Client": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jane Doe"
        },
        "email": {
          "type": "string",
          "example": "jane@example.com"
        },
        "phone": {
          "type": "string",
          "example": "555-987-6543"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "githubId": {
          "type": "string",
          "example": "12345"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "john@example.com"
        },
        "profilePicture": {
          "type": "string",
          "example": "https://example.com/pic.jpg"
        }
      }
    },
    "Appointment": {
      "type": "object",
      "properties": {
        "property_id": {
          "type": "string",
          "example": "60d21b4667d0d8992e610c85"
        },
        "agent_id": {
          "type": "string",
          "example": "60d21b4667d0d8992e610c86"
        },
        "client_id": {
          "type": "string",
          "example": "60d21b4667d0d8992e610c87"
        },
        "appointment_date": {
          "type": "string",
          "example": "2025-06-25"
        },
        "start_time": {
          "type": "string",
          "example": "14:00"
        },
        "end_time": {
          "type": "string",
          "example": "15:00"
        },
        "status": {
          "type": "string",
          "example": "scheduled"
        },
        "notes": {
          "type": "string",
          "example": "Client is interested in purchasing the property"
        }
      }
    }
  }
}